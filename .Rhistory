plot_4scenes_index_vs_lst(g1, index="NDVI",
png_path=file.path(root, "_analysis", "NDVI_vs_LST_2013-2016.png"))
plot_4scenes_index_vs_lst(g2, index="NDVI",
png_path=file.path(root, "_analysis", "NDVI_vs_LST_2017-2021.png"))
plot_4scenes_index_vs_lst(g3, index="NDVI",
png_path=file.path(root, "_analysis", "NDVI_vs_LST_2022-2025.png"))
# Example 2: NDBI vs LST groups
plot_4scenes_index_vs_lst(g1, index="NDBI",
png_path=file.path(root, "_analysis", "NDBI_vs_LST_2013-2016.png"))
# Example 3: If you want water-related index, prefer MNDWI in urban areas
plot_4scenes_index_vs_lst(g1, index="MNDWI",
png_path=file.path(root, "_analysis", "MNDWI_vs_LST_2013-2016.png"))
library(terra)
root <- "E:/Course&Class/SFRS"
aoi  <- vect(file.path(root, "n_shapefile", "AOI.shp"))
# find scene folders that exist for both NDVI (clipped) and LST (clipped)
sc_ndvi <- list.dirs(file.path(root, "_ndvi_clipped"), recursive=FALSE, full.names=FALSE)
sc_lst  <- list.dirs(file.path(root, "_lst_clipped"),  recursive=FALSE, full.names=FALSE)
scenes  <- intersect(sc_ndvi, sc_lst)
scenes  <- scenes[grepl("^20", scenes)]
# helper: pick scenes at 4-year intervals (e.g., 2013, 2017, 2021, 2025)
years   <- sort(unique(as.integer(substr(scenes, 1, 4))))
targets <- seq(min(years), max(years), by=4)
scenes4 <- unlist(lapply(targets, function(y) {
s <- scenes[substr(scenes, 1, 4) == as.character(y)]
if (length(s)) s[1] else NA
}))
scenes4 <- scenes4[!is.na(scenes4)]
if (length(scenes4) < 2) stop("Not enough scenes at 4-year spacing.")
# --- index loaders ---
get_ndvi <- function(scene) {
lst <- rast(file.path(root, "_lst_clipped", scene, paste0(scene, "_LST_C_clipped.tif")))
nd  <- rast(file.path(root, "_ndvi_clipped", scene, paste0(scene, "_NDVI_clipped.tif")))
nd  <- resample(nd, lst, method="bilinear")
list(idx=nd, lst=lst, name="NDVI")
}
get_ndbi <- function(scene) {
lst <- rast(file.path(root, "_lst_clipped", scene, paste0(scene, "_LST_C_clipped.tif")))
refd <- file.path(root, "_toa_reflectance_masked", scene)
nir <- rast(list.files(refd, pattern="_B5.*_toa\\.(tif|TIF)$", full.names=TRUE, ignore.case=TRUE)[1])
sw1 <- rast(list.files(refd, pattern="_B6.*_toa\\.(tif|TIF)$", full.names=TRUE, ignore.case=TRUE)[1])
nir <- resample(mask(crop(nir, aoi), aoi), lst, method="bilinear")
sw1 <- resample(mask(crop(sw1, aoi), aoi), lst, method="bilinear")
idx <- clamp((sw1 - nir)/(sw1 + nir), -1, 1)
list(idx=idx, lst=lst, name="NDBI")
}
plot_4yr_index_vs_lst <- function(scenes4, index=c("NDVI","NDBI"), png_path=NULL, sample_n=4000) {
index <- match.arg(index)
fetch <- if (index=="NDVI") get_ndvi else get_ndbi
if (!is.null(png_path)) png(png_path, width=1200, height=900, res=130)
op <- par(mfrow=c(2,2), mar=c(4,4,3,1))
for (scn in scenes4) {
dat <- fetch(scn)
stk <- c(dat$lst, dat$idx); names(stk) <- c("LST","IDX")
smp <- spatSample(stk, size=sample_n, method="regular", na.rm=TRUE, as.data.frame=TRUE)
r   <- round(cor(smp$LST, smp$IDX, use="complete.obs"), 2)
colp <- if (index=="NDVI") rgb(0,0.5,0,0.35) else rgb(0.6,0,0,0.35)
plot(smp$IDX, smp$LST, pch=16, cex=0.35, col=colp,
xlab=index, ylab="LST (°C)",
main=paste0(scn, "\n r = ", ifelse(r>=0, "+",""), r))
abline(lm(LST ~ IDX, data=smp), col="red", lwd=2)
}
par(op)
if (!is.null(png_path)) dev.off()
}
# ---------- RUN IT ----------
# NDVI vs LST for 4-year interval scenes
plot_4yr_index_vs_lst(scenes4, index="NDVI",
png_path=file.path(root, "_analysis", "NDVI_vs_LST_4yr.png"))
# NDBI vs LST for the same 4-year interval scenes
plot_4yr_index_vs_lst(scenes4, index="NDBI",
png_path=file.path(root, "_analysis", "NDBI_vs_LST_4yr.png"))
library(terra)
root <- "E:/Course&Class/SFRS"
aoi  <- vect(file.path(root, "n_shapefile", "AOI.shp"))
# pick a bin of scenes (edit to your sets)
bin1 <- c("2013-07-16_LC08_194_026",
"2014-07-19_LC08_194_026",
"2015-08-23_LC08_194_025",
"2016-07-08_LC08_194_026")
# --- helpers ---
get_ndvi <- function(scene){
rast(file.path(root, "_ndvi_clipped", scene, paste0(scene, "_NDVI_clipped.tif")))
}
get_lst <- function(scene){
rast(file.path(root, "_lst_clipped", scene, paste0(scene, "_LST_C_clipped.tif")))
}
get_ndbi <- function(scene, target_grid){
refd <- file.path(root, "_toa_reflectance_masked", scene)
nir <- rast(list.files(refd, pattern="_B5.*_toa\\.(tif|TIF)$", full.names=TRUE, ignore.case=TRUE)[1])
sw1 <- rast(list.files(refd, pattern="_B6.*_toa\\.(tif|TIF)$", full.names=TRUE, ignore.case=TRUE)[1])
nir <- resample(mask(crop(nir, aoi), aoi), target_grid, method="bilinear")
sw1 <- resample(mask(crop(sw1, aoi), aoi), target_grid, method="bilinear")
clamp((sw1 - nir)/(sw1 + nir), -1, 1)
}
# align everything to the first LST grid in the bin
grid_ref <- get_lst(bin1[1])
# stacks for median composite
ndvi_stack <- rast(lapply(bin1, \(s) resample(get_ndvi(s), grid_ref, method="bilinear")))
lst_stack  <- rast(lapply(bin1, \(s) resample(get_lst(s),  grid_ref, method="bilinear")))
ndbi_stack <- rast(lapply(bin1, \(s) get_ndbi(s, grid_ref)))
# per-pixel median (robust to outliers)
ndvi_med <- app(ndvi_stack, median, na.rm=TRUE)
ndbi_med <- app(ndbi_stack, median, na.rm=TRUE)
lst_med  <- app(lst_stack,  median, na.rm=TRUE)
# sample and plot
par(mfrow=c(1,2))
# NDVI vs LST
s1 <- spatSample(c(lst_med, ndvi_med), size=6000, method="regular", na.rm=TRUE, as.data.frame=TRUE)
r1 <- round(cor(s1$layer, s1$layer.1, use="complete.obs"), 2)
plot(s1$layer.1, s1$layer, pch=16, cex=0.35, col=rgb(0,0.5,0,0.35),
xlab="NDVI (median 4y)", ylab="LST (°C, median 4y)",
main=paste0("NDVI vs LST (", paste(substr(bin1,1,4), collapse="-"), ")\n r=", r1))
abline(lm(layer ~ layer.1, data=s1), col="red", lwd=2)
# ---- NDVI vs LST (median composites) ----
stk1 <- c(lst_med, ndvi_med)
names(stk1) <- c("LST", "NDVI")
s1 <- spatSample(stk1, size = 6000, method = "regular",
na.rm = TRUE, as.data.frame = TRUE)
r1 <- round(cor(s1$LST, s1$NDVI, use = "complete.obs"), 2)
plot(s1$NDVI, s1$LST, pch=16, cex=0.35, col=rgb(0,0.5,0,0.35),
xlab="NDVI (median 4y)", ylab="LST (°C, median 4y)",
main=paste0("NDVI vs LST (", paste(substr(bin1,1,4), collapse="-"), ")\n r = ", r1))
abline(lm(LST ~ NDVI, data=s1), col="red", lwd=2)
# ---- NDBI vs LST (median composites) ----
stk2 <- c(lst_med, ndbi_med)
names(stk2) <- c("LST", "NDBI")
s2 <- spatSample(stk2, size = 6000, method = "regular",
na.rm = TRUE, as.data.frame = TRUE)
r2 <- round(cor(s2$LST, s2$NDBI, use = "complete.obs"), 2)
plot(s2$NDBI, s2$LST, pch=16, cex=0.35, col=rgb(0.6,0,0,0.35),
xlab="NDBI (median 4y)", ylab="LST (°C, median 4y)",
main=paste0("NDBI vs LST (", paste(substr(bin1,1,4), collapse="-"), ")\n r = ", r2))
abline(lm(LST ~ NDBI, data=s2), col="red", lwd=2)
library(terra)
# ---- set your scene ----
root  <- "E:/Course&Class/SFRS"
scene <- "2019-07-26_LC08_193_026"   # <- change to any of your 12 scenes
# paths
aoi  <- vect(file.path(root, "n_shapefile", "AOI.shp"))
ndvi <- rast(file.path(root, "_ndvi_clipped", scene,
paste0(scene, "_NDVI_clipped.tif")))
lst  <- rast(file.path(root, "_lst_clipped",  scene,
paste0(scene, "_LST_C_clipped.tif")))
refd <- file.path(root, "_toa_reflectance_masked", scene)
# bands for NDBI (NIR=B5, SWIR1=B6) from TOA reflectance
nir <- rast(list.files(refd, pattern="_B5.*_toa\\.(tif|TIF)$", full.names=TRUE, ignore.case=TRUE)[1])
sw1 <- rast(list.files(refd, pattern="_B6.*_toa\\.(tif|TIF)$", full.names=TRUE, ignore.case=TRUE)[1])
nir <- resample(mask(crop(nir, aoi), aoi), lst, method="bilinear")
sw1 <- resample(mask(crop(sw1, aoi), aoi), lst, method="bilinear")
# align NDVI to LST grid just in case
ndvi <- resample(ndvi, lst, method="bilinear")
# make NDBI
ndbi <- (sw1 - nir) / (sw1 + nir); ndbi <- clamp(ndbi, -1, 1)
# sample points for plotting
stk <- c(lst, ndvi, ndbi); names(stk) <- c("LST","NDVI","NDBI")
smp <- spatSample(stk, size=4000, method="regular", na.rm=TRUE, as.data.frame=TRUE)
# correlations (rounded; show sign)
r_ndvi <- round(cor(smp$LST, smp$NDVI, use="complete.obs"), 2)
r_ndbi <- round(cor(smp$LST, smp$NDBI, use="complete.obs"), 2)
# ---- draw “report card” ----
layout(matrix(c(1,2,3,4), nrow=2, byrow=TRUE), widths=c(3,1.2), heights=c(1,1))
par(mar=c(3,3,3,1))
# NDVI vs LST (mini scatter)
plot(smp$NDVI, smp$LST, pch=16, cex=0.35, col=rgb(0,0.5,0,0.35),
xlab="NDVI", ylab="LST (°C)", main="NDVI vs LST")
abline(lm(LST ~ NDVI, data=smp), col="red", lwd=2)
# r value cell (NDVI)
par(mar=c(3,0,3,0)); plot.new(); text(0.5,0.6, labels=paste(ifelse(r_ndvi>=0,"+",""), r_ndvi, sep=""),
cex=2.2, col="darkgreen", font=2)
text(0.5,0.15, "r", cex=1.2)
# NDBI vs LST (mini scatter)
par(mar=c(3,3,3,1))
setwd("C:/Users/User/OneDrive/Desktop/Stable-Isotope-Ratio-Analysis-of-Tomatoes")
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(patchwork)
dat <- read_csv("Original_Replicates_Labeled.csv", show_col_types = FALSE)
pal_region <- c(
"Almeria"     = "#1b9e77",
"Bavaria"     = "#d95f02",
"Souss-Massa" = "#7570b3"
)
shape_ft <- c("Conventional" = 17, "Organic" = 16)
p1 <- ggplot(dat, aes(farming_type, d13C_permil, color = region, shape = farming_type)) +
geom_boxplot(width = 0.55, outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.6), size = 2.2) +
scale_color_manual(values = pal_region) +
scale_shape_manual(values = shape_ft) +
labs(x = NULL, y = expression(delta^13*C~("\u2030"))) +
theme_classic(base_size = 12) +
theme(legend.position = "none")
p2 <- ggplot(dat, aes(farming_type, d15N_permil, color = region, shape = farming_type)) +
geom_boxplot(width = 0.55, outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.6), size = 2.2) +
scale_color_manual(values = pal_region) +
scale_shape_manual(values = shape_ft) +
labs(x = NULL, y = expression(delta^15*N~("\u2030"))) +
theme_classic(base_size = 12) +
theme(legend.position = "none")
p3 <- ggplot(dat, aes(farming_type, wtN_percent, color = region, shape = farming_type)) +
geom_boxplot(width = 0.55, outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.6), size = 2.2) +
scale_color_manual(values = pal_region) +
scale_shape_manual(values = shape_ft) +
labs(x = NULL, y = "wt%N") +
theme_classic(base_size = 12) +
theme(legend.position = "none")
p4 <- ggplot(dat, aes(farming_type, CN_molar, color = region, shape = farming_type)) +
geom_boxplot(width = 0.55, outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.6), size = 2.2) +
scale_color_manual(values = pal_region) +
scale_shape_manual(values = shape_ft) +
labs(x = NULL, y = "C:N (molar)") +
theme_classic(base_size = 12) +
theme(legend.position = "none")
legend_plot <- ggplot(dat, aes(farming_type, d13C_permil, color = region, shape = farming_type)) +
geom_point(size = 3) +
scale_color_manual(values = pal_region) +
scale_shape_manual(values = shape_ft) +
guides(color = guide_legend(title = "Region"), shape = guide_legend(title = "Farming type")) +
theme_void(base_size = 12) +
theme(legend.position = "right", legend.box = "vertical")
grid <- (p1 | p2) / (p3 | p4)
final <- grid + plot_layout(guides = "collect") & theme(legend.position = "none")
wrapped <- final | legend_plot + plot_layout(widths = c(1, 0.28))
ggsave("Figure1_overview_traits.tiff", wrapped, device = "tiff", dpi = 300, width = 13.7, height = 9.6, units = "in")
setwd("C:/Users/User/OneDrive/Desktop/Stable-Isotope-Ratio-Analysis-of-Tomatoes")
library(readr)
library(dplyr)
library(ggplot2)
library(patchwork)
dat <- read_csv("Original_Replicates_Labeled.csv", show_col_types = FALSE) |>
mutate(farming_type = factor(farming_type, levels = c("Conventional","Organic")))
pal_region <- c("Almeria"="#1b9e77","Bavaria"="#d95f02","Souss-Massa"="#7570b3")
shape_ft   <- c("Conventional"=17,"Organic"=16)
jit <- position_jitter(width = 0.18, height = 0)
base_theme <- theme_classic(base_size = 12) +
theme(
legend.position = "bottom",
legend.box = "horizontal",
axis.title.x = element_blank(),
plot.margin = margin(6,6,6,6)
)
panel <- function(yvar, ylab) {
ggplot(dat, aes(x = farming_type, y = {{ yvar }}, color = region, shape = farming_type)) +
geom_boxplot(width = 0.58, outlier.shape = NA) +
geom_point(position = jit, size = 2.2, alpha = 0.9) +
scale_color_manual(values = pal_region) +
scale_shape_manual(values = shape_ft) +
scale_x_discrete(expand = expansion(add = 0.25)) +
labs(y = ylab, x = NULL) +
base_theme
}
p1 <- panel(d13C_permil, expression(delta^13*C~"\u2030"))
p2 <- panel(d15N_permil, expression(delta^15*N~"\u2030"))
p3 <- panel(wtN_percent, "wt% N")
p4 <- panel(CN_molar, "C:N (molar)")
fig <- (p1 | p2) / (p3 | p4) +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
final <- fig + plot_annotation(tag_levels = "A", tag_suffix = ")")
ggsave("Figure1_overview_traits.tiff", final, device = "tiff",
dpi = 300, width = 13.2, height = 9.2, units = "in")
setwd("C:/Users/User/OneDrive/Desktop/Stable-Isotope-Ratio-Analysis-of-Tomatoes")
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(patchwork)
# Read dataset
dat <- read.csv("Derived_From_Original_AtoJ_rounded.csv")
# Visualization
BASE_PT <- 12
springer_theme <- theme_classic(base_size = BASE_PT) +
theme(
axis.text = element_text(color = "black"),
axis.title = element_text(color = "black"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.4)
)
make_panel <- function(df, mean_col, sd_col, y_lab) {
df %>%
transmute(
Group = product,
mean  = .data[[mean_col]],
sd    = .data[[sd_col]],
ymin  = mean - sd,
ymax  = mean + sd
) %>%
ggplot(aes(x = Group, y = mean)) +
geom_errorbar(aes(ymin = ymin, ymax = ymax),
width = 0.25, linewidth = 0.45, color = "grey30") +
geom_point(size = 2.5, color = "#1b2838") +
labs(x = NULL, y = y_lab) +
springer_theme +
theme(
panel.grid.major.x = element_blank(),
axis.text.x = element_text(vjust = 0.5),
axis.title.y = element_text(margin = margin(r = 6))
)
}
pA <- make_panel(dat, "d13C_mean", "d13C_sd", expression(delta^13*C~"(‰)"))
pB <- make_panel(dat, "d15N_mean", "d15N_sd", expression(delta^15*N~"(‰)"))
pC <- make_panel(dat, "wtN_mean",  "wtN_sd",  "wt%N (%)")
pD <- make_panel(dat, "CN_molar_mean", "CN_molar_sd", "C:N (molar)")
fig01 <- (pA | pB) / (pC | pD) +
plot_annotation(tag_levels = "A") &
theme(plot.tag = element_text(face = "bold", size = BASE_PT))
ggsave("Fig01_MeanSD_ByProduct.png", fig01,
dpi = 300, width = 7.5, height = 6.5, units = "in")
setwd("C:/Users/User/OneDrive/Desktop/Stable-Isotope-Ratio-Analysis-of-Tomatoes")
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
set.seed(42)
prod <- read_csv("Derived_From_Original_AtoJ_Exact_Decimals.csv", show_col_types = FALSE)
# Expect these columns: product, region, farming_type, d13C_mean, d13C_sd, d15N_mean, d15N_sd,
# wtN_mean, wtN_sd, wtC_mean, wtC_sd, CN_molar_mean, CN_molar_sd
prod_long <- prod %>%
transmute(
product, region, farming_type,
`δ13C (‰)` = d13C_mean,
`δ15N (‰)` = d15N_mean,
`wt%N (%)` = wtN_mean,
`C:N (molar)` = CN_molar_mean
) %>%
pivot_longer(cols = c(`δ13C (‰)`,`δ15N (‰)`,`wt%N (%)`,`C:N (molar)`),
names_to = "variable", values_to = "value")
pal_region <- c("Almeria"="#1b9e77","Bavaria"="#d95f02","Souss-Massa"="#7570b3")
shape_ft   <- c("Conventional"=17,"Organic"=16)
p <- ggplot(prod_long, aes(x = farming_type, y = value)) +
geom_boxplot(fill = NA, colour = "black", linewidth = 0.4, width = 0.6, outlier.shape = NA) +
geom_point(aes(color = region, shape = farming_type),
position = position_jitter(width = 0.18, height = 0), size = 2.1) +
facet_wrap(~ variable, ncol = 2, scales = "free_y") +
scale_color_manual(values = pal_region, name = "Region") +
scale_shape_manual(values = shape_ft, name = "Farming type") +
labs(x = NULL, y = NULL) +
theme_minimal(base_size = 10) +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", linewidth = 0.4),
axis.ticks = element_line(colour = "black", linewidth = 0.4),
plot.margin = margin(6,6,6,6)
)
ggsave("figures/Figure1_overview_traits.tiff", p,
width = 174, height = 122, units = "mm",
dpi = 600, device = "tiff", compression = "lzw", bg = "white")
ggsave("figures/Figure1_overview_traits.tiff", p,
width = 174, height = 122, units = "mm",
dpi = 600, device = "tiff", compression = "lzw", bg = "white")
setwd("C:/Users/User/OneDrive/Desktop/Stable-Isotope-Ratio-Analysis-of-Tomatoes")
library(readr)
library(dplyr)
library(ggplot2)
library(patchwork)
dat <- read_csv("Original_Replicates_Labeled.csv", show_col_types = FALSE)
pal_region <- c(
"Almeria"     = "#1b9e77",
"Bavaria"     = "#d95f02",
"Souss-Massa" = "#7570b3"
)
shape_ft <- c("Conventional" = 17, "Organic" = 16)
g_c <- ggplot(dat, aes(farming_type, d13C_permil, color = region, shape = farming_type)) +
geom_boxplot(width = 0.55, outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.6), size = 2.4) +
scale_color_manual(values = pal_region) +
scale_shape_manual(values = shape_ft) +
labs(x = NULL, y = expression(delta^13*C~("\u2030"))) +
theme_classic(base_size = 13) +
theme(legend.position = "right")
g_n <- ggplot(dat, aes(farming_type, d15N_permil, color = region, shape = farming_type)) +
geom_boxplot(width = 0.55, outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.15, dodge.width = 0.6), size = 2.4) +
scale_color_manual(values = pal_region) +
scale_shape_manual(values = shape_ft) +
labs(x = NULL, y = expression(delta^15*N~("\u2030"))) +
theme_classic(base_size = 13) +
theme(legend.position = "right")
fig <- g_c / g_n + plot_layout(guides = "collect") & theme(legend.position = "right")
ggsave("Figure2_isotopes_by_farmingtype.tiff", fig, device = "tiff", dpi = 300, width = 6.6, height = 10.2, units = "in")
setwd("C:/Users/User/OneDrive/Desktop/Stable-Isotope-Ratio-Analysis-of-Tomatoes")
library(readr)
library(dplyr)
library(ggplot2)
library(patchwork)
set.seed(42)
dat <- read_csv("Original_Replicates_Labeled.csv", show_col_types = FALSE)
pal_region <- c("Almeria"="#1b9e77","Bavaria"="#d95f02","Souss-Massa"="#7570b3")
shape_ft   <- c("Conventional"=17,"Organic"=16)
p1 <- ggplot(dat, aes(farming_type, d13C_permil)) +
geom_boxplot(fill = NA, colour = "black", linewidth = 0.4, width = 0.6, outlier.shape = NA) +
geom_point(aes(color = region, shape = farming_type),
position = position_jitter(width = 0.18, height = 0), size = 2.0) +
scale_color_manual(values = pal_region, name = "Region") +
scale_shape_manual(values = shape_ft, name = "Farming type") +
labs(x = NULL, y = expression(delta^13*C~("\u2030"))) +
theme_minimal(base_size = 10) +
theme(panel.grid.major.x = element_blank(), panel.grid.minor = element_blank())
p2 <- ggplot(dat, aes(farming_type, d15N_permil)) +
geom_boxplot(fill = NA, colour = "black", linewidth = 0.4, width = 0.6, outlier.shape = NA) +
geom_point(aes(color = region, shape = farming_type),
position = position_jitter(width = 0.18, height = 0), size = 2.0) +
scale_color_manual(values = pal_region, name = "Region") +
scale_shape_manual(values = shape_ft, name = "Farming type") +
labs(x = NULL, y = expression(delta^15*N~("\u2030"))) +
theme_minimal(base_size = 10) +
theme(panel.grid.major.x = element_blank(), panel.grid.minor = element_blank())
fig <- p1 / p2
ggsave("figures/Figure2_isotopes_by_farmingtype.tiff", fig,
width = 84, height = 130, units = "mm",
dpi = 600, device = "tiff", compression = "lzw", bg = "white")
setwd("C:/Users/User/OneDrive/Desktop/Stable-Isotope-Ratio-Analysis-of-Tomatoes")
library(readr)
library(dplyr)
library(ggplot2)
dat <- read_csv("Original_Replicates_Labeled.csv", show_col_types = FALSE)
pal_region <- c(
"Almeria"     = "#1b9e77",
"Bavaria"     = "#d95f02",
"Souss-Massa" = "#7570b3"
)
shape_ft <- c("Conventional" = 17, "Organic" = 16)
p <- ggplot(dat, aes(d13C_permil, d15N_permil, color = region, shape = farming_type)) +
geom_point(size = 3) +
scale_color_manual(values = pal_region) +
scale_shape_manual(values = shape_ft) +
labs(x = expression(delta^13*C~("\u2030")), y = expression(delta^15*N~("\u2030"))) +
theme_classic(base_size = 14) +
theme(legend.position = "right")
ggsave("Figure3_isotopes_by_region_scatter.tiff", p, device = "tiff", dpi = 300, width = 6.6, height = 6.6, units = "in")
setwd("C:/Users/User/OneDrive/Desktop/Stable-Isotope-Ratio-Analysis-of-Tomatoes")
library(readr)
library(dplyr)
library(ggplot2)
dat <- read_csv("Original_Replicates_Labeled.csv", show_col_types = FALSE)
X <- dat %>%
select(d13C_permil, d15N_permil, wtN_percent, wtC_percent, CN_molar) %>%
as.data.frame()
pc <- prcomp(X, center = TRUE, scale. = TRUE)
ve <- 100 * pc$sdev^2 / sum(pc$sdev^2)
lab_x <- paste0("PC1 (", round(ve[1], 1), "%)")
lab_y <- paste0("PC2 (", round(ve[2], 1), "%)")
scores <- as.data.frame(pc$x) %>%
select(PC1, PC2) %>%
bind_cols(dat %>% select(region, farming_type))
pal_region <- c(
"Almeria"     = "#1b9e77",
"Bavaria"     = "#d95f02",
"Souss-Massa" = "#7570b3"
)
shape_ft <- c("Conventional" = 17, "Organic" = 16)
p <- ggplot(scores, aes(PC1, PC2, color = region, shape = farming_type)) +
geom_hline(yintercept = 0, linetype = 2, linewidth = 0.4, color = "grey40") +
geom_vline(xintercept = 0, linetype = 2, linewidth = 0.4, color = "grey40") +
geom_point(size = 3) +
scale_color_manual(values = pal_region) +
scale_shape_manual(values = shape_ft) +
labs(x = lab_x, y = lab_y) +
theme_classic(base_size = 14) +
theme(legend.position = "right")
ggsave("Figure4_PCA_scores.tiff", p, device = "tiff", dpi = 300, width = 6.6, height = 6.6, units = "in")
setwd("C:/Users/User/OneDrive/Desktop/Stable-Isotope-Ratio-Analysis-of-Tomatoes")
library(readr)
library(dplyr)
library(ggplot2)
dat <- read_csv("Original_Replicates_Labeled.csv", show_col_types = FALSE)
X <- dat %>%
select(d13C_permil, d15N_permil, wtN_percent, wtC_percent, CN_molar) %>%
as.data.frame()
pc <- prcomp(X, center = TRUE, scale. = TRUE)
ve <- 100 * pc$sdev^2 / sum(pc$sdev^2)
lab_x <- paste0("PC1 (", round(ve[1], 1), "%)")
lab_y <- paste0("PC2 (", round(ve[2], 1), "%)")
scores <- as.data.frame(pc$x) %>%
select(PC1, PC2) %>%
bind_cols(dat %>% select(region, farming_type))
loadings <- as.data.frame(pc$rotation[, 1:2])
loadings$var <- rownames(loadings)
rng <- max(abs(scores$PC1), abs(scores$PC2))
L <- max(sqrt(loadings$PC1^2 + loadings$PC2^2))
scale_factor <- 0.8 * rng / L
loadings_scaled <- transform(loadings,
xend = PC1 * scale_factor,
yend = PC2 * scale_factor
)
pal_region <- c(
"Almeria"     = "#1b9e77",
"Bavaria"     = "#d95f02",
"Souss-Massa" = "#7570b3"
)
shape_ft <- c("Conventional" = 17, "Organic" = 16)
p <- ggplot() +
geom_hline(yintercept = 0, linetype = 2, linewidth = 0.4, color = "grey40") +
geom_vline(xintercept = 0, linetype = 2, linewidth = 0.4, color = "grey40") +
geom_point(data = scores, aes(PC1, PC2, color = region, shape = farming_type), size = 3) +
geom_segment(data = loadings_scaled,
aes(x = 0, y = 0, xend = xend, yend = yend),
arrow = arrow(length = unit(0.22, "cm")), linewidth = 0.7) +
geom_text(data = loadings_scaled,
aes(x = xend, y = yend, label = var),
nudge_x = 0.05, nudge_y = 0.05, size = 4) +
scale_color_manual(values = pal_region) +
scale_shape_manual(values = shape_ft) +
labs(x = lab_x, y = lab_y) +
theme_classic(base_size = 14) +
theme(legend.position = "right")
ggsave("Figure5_PCA_biplot.tiff", p, device = "tiff", dpi = 300, width = 13.7, height = 9.7, units = "in")
